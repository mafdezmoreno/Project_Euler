/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:
     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

//import 'dart:ffi';
import 'dart:math';

int main() {
  final stopwatch = Stopwatch()..start();
  //! Real start of the program
  /*
  var prev_seventh_value = seventh_triangle_number(0, 0, 6);
  print(prev_seventh_value); //21
  print(seventh_triangle_number(6, prev_seventh_value, 7)); //28 //1ms
  */
  /*
  print(21);
  var factor_vec = factors(21);
  print(factor_vec); //1 21 3 7 // 3ms
  */

  print(get_seventh_triangle_number_over_divisors(5)); //28 //0ms
  print(get_seventh_triangle_number_over_divisors(500)); //76576500 //132ms

  //! Final of the program
  print('Executed in ${stopwatch.elapsed.inMilliseconds} ms');
  return 0;
}

int seventh_triangle_number(
    int prev_seventh, int prev_seventh_value, int value) {
  int seventh = prev_seventh_value;
  for (int i = (prev_seventh + 1); i < value + 1; i++) {
    seventh = seventh + i;
  }
  return seventh;
}

int factors(int value) {
  double temp1 = sqrt(value);
  int temp2 = temp1.toInt();
  //var factors = [];
  //factors.add(1);
  //factors.add(value);
  int counter = 2;
  for (var i = 2; i < temp2; i++) {
    if (value % i == 0) {
      //factors.add(i);
      //factors.add(value ~/ i);
      counter = counter +2;
    }
  }
  if (temp1 == temp2) {
    //factors.add(temp2.toInt());
    counter++;
  }
  //return factors;
  return counter;
}

int get_seventh_triangle_number_over_divisors(int value) {
  int divisors = 0;
  int seventh_value = 1;
  int seventh_index = 1;
  while (true) {
    //var temp = factors(seventh_value);
    // divisors = temp.length;
    divisors = factors(seventh_value);
    if (divisors >= value) break;
    seventh_index++;
    seventh_value = seventh_triangle_number(
        seventh_index - 1, seventh_value, seventh_index);
  }
  return seventh_value;
}
