'''
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
'''

import time
from math import sqrt
start_time = time.time()

def seventh_triangle_number(prev_seventh, prev_seventh_value, value):
    seventh = prev_seventh_value
    for i in range(prev_seventh+1,value+1):
        seventh += i
    return seventh

#prev_seventh_value = seventh_triangle_number(0,0,6)
#print(prev_seventh_value) #21
#print(seventh_triangle_number(6,prev_seventh_value,7)) #28


def factors(value, return_array):

    temp1=sqrt(value)
    temp2=int(temp1)
    #factors=[1,value]
    counter = 2
    for i in range (2,temp2):
        if(value%i==0):
            #factors.append(i)
            #factors.append(value//i)
            #print(i, value//i)
            counter+=2
    if(temp1==temp2):
        #factors.append(temp2)
        counter+=1

    if return_array:
        return factors
    
    #return len(factors)
    return counter

#print(factors(21, True))  #[1, 3, 7, 21]
#print(factors(28, True))  #[1, 2, 4, 7, 14, 2]
#print(factors(36, True))  #[1, 36, 2, 18, 3, 12, 4, 9, 6]

def get_seventh_triangle_number_over_divisors(value):

    divisors = 0
    seventh_value = 1
    seventh_index = 1
    while True:
        divisors = factors(seventh_value, False)
        if divisors >= value:
            break
        seventh_index+=1
        seventh_value = seventh_triangle_number(seventh_index-1, seventh_value, seventh_index)

    #return (seventh_value, factors(seventh_value, True))
    return seventh_value

print(get_seventh_triangle_number_over_divisors(5))      #28        //0.000033 s
#print(get_seventh_triangle_number_over_divisors(50))     #25200 //0.000904 s    //0.041302 s
#print(get_seventh_triangle_number_over_divisors(100))   #73920      //0.203230 s
#print(get_seventh_triangle_number_over_divisors(200))   #2031120  //0.049273 s  // 30.082121 s
#print(get_seventh_triangle_number_over_divisors(300))   #2162160 // 0.052654 s //32 s
print(get_seventh_triangle_number_over_divisors(500))   #76576500 //1.684446 s
end_time = time.time()
print("%.6f s" % ((end_time - start_time)))