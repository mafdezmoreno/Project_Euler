/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

import Foundation

let start = DispatchTime.now()

var b = 2
var a = 1
var c = 3
var sum_of_even = 2

var i = 3

while (true) {

    //if (i >= 35){
    if (i >= 4000000){
        break
    }
    c = a + b
    a = b
    b = c
    i = c
    if (c%2 == 0){
        sum_of_even += c
        print (c, terminator: "")
    }
}

print("")
print(sum_of_even)

let end = DispatchTime.now()
let usTime:Double = Double(end.uptimeNanoseconds - start.uptimeNanoseconds)/1_000
print(a, b)
print ("\(usTime) us")