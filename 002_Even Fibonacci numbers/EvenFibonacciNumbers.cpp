/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
#include <iostream>
#include <chrono>

int main() {

	auto start = std::chrono::high_resolution_clock::now();
	//! Start

	unsigned int b = 2;
	unsigned int a = 1;
	unsigned int c = 3;
	unsigned int sum_of_even = 2;
	unsigned int i = 3;

	while (true) {

		if (i >= 4000000) {
			break;
		}
		c = a + b;
		a = b;
		b = c;
		i = c;
		if (c%2 == 0) {
			sum_of_even += c;
			std::cout << c << " ";

		}

	}
	std::cout<<std::endl;
	std::cout << sum_of_even << std::endl;


	//! End
    auto stop = std::chrono::high_resolution_clock::now();
    auto duration = duration_cast<std::chrono::microseconds>(stop - start).count();
  
    std::cout << duration<< "us"<< std::endl;
}
