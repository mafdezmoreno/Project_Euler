/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

package main

import (
	"fmt"
	"time"
)

func main() {

	start := time.Now()

	b := 2
	a := 1
	c := 3
	sum_of_even := 2
	i := 3

	for true {

		//if i>= 35{}
		if i >= 4000000 {
			break
		}
		c = a + b
		//fmt.Println(a, b, c)
		a = b
		b = c
		i = c
		if c%2 == 0 {
			sum_of_even += c
			fmt.Print(c, " ")
		}

	}

	fmt.Println()
	fmt.Println(sum_of_even)
	fmt.Println()

	elapsed := time.Since(start)
	fmt.Println(elapsed)
}
